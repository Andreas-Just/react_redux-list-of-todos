{"version":3,"sources":["store/loading.ts","constants/actionTypes.ts","store/todos.ts","store/query.ts","constants/sortOrders.ts","store/sort.ts","store/pagination.ts","store/index.ts","helpers/api.ts","components/User.tsx","components/TodoItem.tsx","components/Paginator.tsx","components/TodoList.tsx","components/SearchTodo.tsx","App.tsx","index.tsx"],"names":["initialState","loading","loaded","error","reduce","loadingState","action","type","todos","filter","todo","todoId","id","query","ASC","field","order","sortState","setPage","page","perPage","paginationState","rootReducer","combineReducers","loadingReducer","todosReducer","queryReducer","sort","sortReducer","pagination","paginationReducer","getLoading","state","getLoaded","getError","getQuery","getPage","getPerPage","getFilteredTodos","createSelector","sortField","sortOrder","callback","a","b","localeCompare","name","filteredTodos","title","includes","reverse","getVisibleTodos","start","end","slice","getTotalPages","Math","ceil","length","store","createStore","composeWithDevTools","subscribe","localStorage","setItem","JSON","stringify","getState","getAll","url","fetch","then","response","json","User","user","Table","Cell","TodoItem","completed","dispatch","useDispatch","Row","className","positive","negative","textAlign","content","Button","onClick","color","icon","Icon","options","key","text","value","Paginator","useSelector","selectors","totalPages","useEffect","HeaderCell","colSpan","Dropdown","placeholder","floated","selection","onChange","_","setPerPage","direction","Pagination","activePage","onPageChange","ellipsisItem","prevItem","disabled","firstItem","nextItem","lastItem","headersConfig","delete","TodoList","visibleTodos","celled","selectable","Header","Object","keys","map","header","Body","Footer","optionQuery","SearchTodo","Input","inverted","circular","size","target","pattern","maxLength","queryVal","replace","setQuery","getAppData","todosFromServer","users","Promise","ok","setTimeout","find","userId","undefined","App","Segment","as","catch","err","loadingActions","message","finally","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e373eac.chunk.js","sourcesContent":["import { Action } from 'redux';\nimport {\n  START_LOADING,\n  SET_LOADED,\n  SET_ERROR,\n  FINISH_LOADING,\n} from '../constants/actionTypes';\n\ntype StartLoadingAction = Action<typeof START_LOADING>;\ntype FinishLoadingAction = Action<typeof FINISH_LOADING>;\ntype SetLoadedAction = Action<typeof SET_LOADED>;\ntype SetErrorAction = Action<typeof SET_ERROR> & {\n  error: string;\n};\n\nexport const startLoading = (): StartLoadingAction => ({\n  type: START_LOADING,\n});\nexport const finishLoading = (): FinishLoadingAction => ({\n  type: FINISH_LOADING,\n});\nexport const setLoaded = (): SetLoadedAction => ({\n  type: SET_LOADED,\n});\nexport const setError = (error = ''): SetErrorAction => ({\n  type: SET_ERROR,\n  error,\n});\n\nexport type LoadingState = {\n  loading: boolean;\n  loaded: boolean;\n  error: string;\n};\n\nconst initialState: LoadingState = {\n  loading: false,\n  loaded: false,\n  error: '',\n};\n\ntype LoadingAction = StartLoadingAction | SetLoadedAction | SetErrorAction | FinishLoadingAction;\n\nconst reduce = (loadingState = initialState, action: LoadingAction): LoadingState => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...loadingState, loading: true };\n    case SET_LOADED:\n      return { ...loadingState, loaded: true };\n    case SET_ERROR:\n      return { ...loadingState, error: action.error };\n    case FINISH_LOADING:\n      return { ...loadingState, loading: false };\n    default:\n      return loadingState;\n  }\n};\n\nexport default reduce;\n","export const START_LOADING = 'START_LOADING';\nexport const SET_LOADED = 'SET_LOADED';\nexport const SET_ERROR = 'SET_ERROR';\nexport const FINISH_LOADING = 'FINISH_LOADING';\n\nexport const INIT_TODOS = 'INIT_TODOS';\nexport const DELETE_TODO = 'DELETE_TODO';\n\nexport const SET_QUERY = 'SET_QUERY';\n\nexport const SORT_BY = 'SORT_BY';\n\nexport const SET_PAGE = 'SET_PAGE';\nexport const SET_PER_PAGE = 'SET_PER_PAGE';\n","import { Action } from 'redux';\nimport { INIT_TODOS, DELETE_TODO } from '../constants/actionTypes';\n\ntype InitTodosAction = Action<typeof INIT_TODOS> & {\n  todos: Todo[];\n};\ntype DeleteTodosAction = Action<typeof DELETE_TODO> & {\n  todoId: number;\n};\n\nexport const initTodos = (todos: Todo[]): InitTodosAction => ({\n  type: INIT_TODOS,\n  todos,\n});\nexport const deleteTodo = (todoId: number): DeleteTodosAction => ({\n  type: DELETE_TODO,\n  todoId,\n});\n\ntype TodosAction = InitTodosAction | DeleteTodosAction;\n\nconst reduce = (todos: Todo[] = [], action: TodosAction): Todo[] => {\n  switch (action.type) {\n    case INIT_TODOS:\n      return action.todos;\n    case DELETE_TODO:\n      return todos.filter(todo => action.todoId !== todo.id);\n    default:\n      return todos;\n  }\n};\n\nexport default reduce;\n","import { Action } from 'redux';\nimport { SET_QUERY } from '../constants/actionTypes';\n\ntype setQueryAction = Action<typeof SET_QUERY> & {\n  query: string;\n};\n\nexport const setQuery = (query: string): setQueryAction => ({\n  type: SET_QUERY,\n  query,\n});\n\ntype LoadingAction = setQueryAction;\n\nconst reduce = (query = '', action: LoadingAction): string => {\n  switch (action.type) {\n    case SET_QUERY:\n      return action.query;\n    default:\n      return query;\n  }\n};\n\nexport default reduce;\n","export const ASC = 'ASC';\nexport const DESC = 'DESC';\n","import { Action } from 'redux';\nimport { ASC, DESC } from '../constants/sortOrders';\nimport { SORT_BY } from '../constants/actionTypes';\n\ntype SortByAction = Action<typeof SORT_BY> & {\n  field: keyof HeadersConfig;\n};\n\nexport const setSortBy = (field: keyof HeadersConfig): SortByAction => ({\n  type: SORT_BY,\n  field,\n});\n\ntype SortState = {\n  field: keyof HeadersConfig;\n  order: typeof ASC | typeof DESC;\n};\n\nconst initialState: SortState = {\n  field: 'id',\n  order: ASC,\n};\n\nconst reduce = (sortState = initialState, action: SortByAction): SortState => {\n  switch (action.type) {\n    case SORT_BY:\n      if (action.field === sortState.field) {\n        return {\n          ...sortState,\n          order: sortState.order === ASC ? DESC : ASC,\n        };\n      }\n\n      return {\n        ...sortState,\n        field: action.field,\n        order: ASC,\n      };\n    default:\n      return sortState;\n  }\n};\n\nexport default reduce;\n","import { Action } from 'redux';\nimport { SET_PAGE, SET_PER_PAGE } from '../constants/actionTypes';\n\ntype SetPageAction = Action<typeof SET_PAGE> & {\n  page: number;\n};\ntype SetPerPageAction = Action<typeof SET_PER_PAGE> & {\n  perPage: number;\n};\n\nexport const setPage = (page: number): SetPageAction => ({\n  type: SET_PAGE,\n  page,\n});\nexport const setPerPage = (perPage: number): SetPerPageAction => ({\n  type: SET_PER_PAGE,\n  perPage,\n});\n\ntype PaginationState = {\n  page: number;\n  perPage: number;\n};\n\nconst initialState: PaginationState = {\n  page: 1,\n  perPage: 10,\n};\n\ntype PaginationAction = SetPageAction | SetPerPageAction;\n\nconst reduce = (paginationState = initialState, action: PaginationAction): PaginationState => {\n  switch (action.type) {\n    case SET_PAGE:\n      return {\n        ...paginationState,\n        page: action.page,\n      };\n\n    case SET_PER_PAGE:\n      return {\n        ...paginationState,\n        perPage: action.perPage,\n        page: 1,\n      };\n\n    default:\n      return paginationState;\n  }\n};\n\nexport default reduce;\n","import { combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createSelector } from 'reselect';\n\nimport loadingReducer from './loading';\nimport todosReducer from './todos';\nimport queryReducer from './query';\nimport sortReducer from './sort';\nimport paginationReducer from './pagination';\nimport { ASC, DESC } from '../constants/sortOrders';\n\nconst rootReducer = combineReducers({\n  loading: loadingReducer,\n  todos: todosReducer,\n  query: queryReducer,\n  sort: sortReducer,\n  pagination: paginationReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const getLoading = (state: RootState) => state.loading.loading;\nexport const getLoaded = (state: RootState) => state.loading.loaded;\nexport const getError = (state: RootState) => state.loading.error;\nexport const getQuery = (state: RootState) => state.query;\nexport const getTodos = (state: RootState) => state.todos;\nexport const getSortBy = (state: RootState) => state.sort.field;\nconst getSortOrder = (state: RootState) => state.sort.order;\n\nexport const getPage = (state: RootState) => state.pagination.page;\nexport const getPerPage = (state: RootState) => state.pagination.perPage;\n\nexport const getFilteredTodos = createSelector(\n  getTodos,\n  getQuery,\n  getSortBy,\n  getSortOrder,\n\n  (\n    todos: Todo[],\n    query: string,\n    sortField: keyof HeadersConfig,\n    sortOrder: typeof ASC | typeof DESC,\n  ) => {\n    let callback: (a: Todo, b: Todo) => number = () => 0;\n\n    switch (typeof todos[0][sortField]) {\n      case 'string':\n        callback = (a, b) => a[sortField].localeCompare(b[sortField]);\n        break;\n      case 'object':\n        callback = (a, b) => a[sortField].name.localeCompare(b[sortField].name);\n        break;\n      default:\n        callback = (a, b) => a[sortField] - b[sortField];\n    }\n\n    const filteredTodos = todos\n      .filter(todo => todo.title.includes(query))\n      .sort(callback);\n\n    if (sortOrder === DESC) {\n      filteredTodos.reverse();\n    }\n\n    return filteredTodos;\n  },\n);\n\nexport const getVisibleTodos = createSelector(\n  getFilteredTodos, getPage, getPerPage,\n\n  (todos: Todo[], page: number, perPage: number) => {\n    const start = (page - 1) * perPage;\n    const end = page * perPage;\n\n    return todos.slice(start, end);\n  },\n);\n\nexport const getTotalPages = createSelector(\n  getFilteredTodos, getPerPage,\n  (todos: Todo[], perPage: number) => Math.ceil(todos.length / perPage),\n);\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(),\n);\n\nstore.subscribe(() => {\n  localStorage.setItem('todos', JSON.stringify(store.getState()));\n});\n\nexport default store;\n","const API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nconst getAll = <T>(url: string): Promise<T[]> => {\n  return fetch(`${API_URL}${url}.json`)\n    .then(response => response.json());\n};\n\nexport const getUsers = () => getAll<User>('/users');\nexport const getTodos = () => getAll<Todo>('/todos');\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\n\ntype PropsUser = {\n  user?: User;\n};\n\nconst User: React.FC<PropsUser> = ({ user }) => (\n  <Table.Cell>{user?.name || ''}</Table.Cell>\n);\n\nexport default User;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button, Icon, Table } from 'semantic-ui-react';\nimport { deleteTodo } from '../store/todos';\nimport User from './User';\n\ntype Props = {\n  todo: Todo;\n};\n\nconst TodoItem: React.FC<Props> = ({ todo }) => {\n  const { id, user, completed, title } = todo;\n  const dispatch = useDispatch();\n\n  return (\n    <Table.Row\n      className=\"TodoItem\"\n      positive={completed}\n      negative={!completed}\n    >\n      <Table.Cell>{id}</Table.Cell>\n      <User user={user} />\n      <Table.Cell textAlign=\"left\">{title}</Table.Cell>\n      <Table.Cell content={completed ? 'Complebitur' : 'In processus'} />\n      <Table.Cell>\n        <Button\n          className=\"TodoItem-Delete\"\n          onClick={() => dispatch(deleteTodo(id))}\n          color=\"red\"\n          icon\n        >\n          <Icon name=\"trash alternate\" />\n          &nbsp;&nbsp;Delete\n        </Button>\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default TodoItem;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Icon, Pagination, Table, Dropdown } from 'semantic-ui-react';\nimport * as selectors from '../store';\nimport { setPage, setPerPage } from '../store/pagination';\n\nconst options = [\n  { key: 1, text: '5 todos', value: 5 },\n  { key: 2, text: '10 todos', value: 10 },\n  { key: 3, text: '20 todos', value: 20 },\n  { key: 4, text: '50 todos', value: 50 },\n];\n\nconst Paginator = () => {\n  const dispatch = useDispatch();\n  const page = useSelector(selectors.getPage);\n  const perPage = useSelector(selectors.getPerPage);\n  const totalPages = useSelector(selectors.getTotalPages);\n\n  useEffect(() => {\n    if (page > totalPages) {\n      dispatch(setPage(totalPages));\n    }\n  }, [page, totalPages, dispatch]);\n\n\n  return (\n    <Table.HeaderCell colSpan=\"10\" className=\"Pagination\">\n      <Dropdown\n        placeholder=\"Select people per page\"\n        floated=\"left\"\n        selection\n        name=\"perPage\"\n        value={perPage}\n        onChange={(_, { value }: any) => {\n          dispatch(setPerPage(value));\n        }}\n        options={options}\n        direction=\"right\"\n      />\n      { totalPages !== 1\n      && (\n        <Pagination\n          floated=\"right\"\n          activePage={page}\n          onPageChange={(_, { activePage }: any) => {\n            dispatch(setPage(activePage));\n          }}\n          ellipsisItem={{\n            content: <Icon name=\"ellipsis horizontal\" />,\n            icon: true,\n          }}\n          prevItem={{\n            content: <Icon name=\"angle left\" />,\n            disabled: page === 1,\n            icon: true,\n          }}\n          firstItem={{\n            content: <Icon name=\"angle double left\" />,\n            disabled: page === 1,\n            icon: true,\n          }}\n          nextItem={{\n            content: <Icon name=\"angle right\" />,\n            disabled: page === totalPages,\n            icon: true,\n          }}\n          lastItem={{\n            content: <Icon name=\"angle double right\" />,\n            disabled: page === totalPages,\n            icon: true,\n          }}\n          totalPages={totalPages}\n        />\n      )}\n    </Table.HeaderCell>\n  );\n};\n\nexport default Paginator;\n","import React, { Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Table } from 'semantic-ui-react';\nimport * as selectors from '../store';\nimport { setSortBy } from '../store/sort';\nimport TodoItem from './TodoItem';\nimport Paginator from './Paginator';\n\nconst headersConfig: HeadersConfig = {\n  id: 'Id',\n  user: 'Person',\n  title: 'Description',\n  completed: 'Completed',\n  delete: 'Delete todo',\n};\n\nconst TodoList = () => {\n  const visibleTodos = useSelector(selectors.getVisibleTodos);\n  const dispatch = useDispatch();\n\n  return (\n    <Table celled className=\"ui orange inverted TodoList\" selectable>\n      <Table.Header>\n        <Table.Row className=\"TodoList-TableRow\">\n          {Object.keys(headersConfig).map(header => (\n            <Fragment key={header}>\n              {header !== 'delete'\n                ? (\n                  <Table.HeaderCell\n                    className=\"TodoList-HeaderCell\"\n                    onClick={() => {\n                      dispatch(setSortBy(header));\n                    }}\n                    content={headersConfig[header]}\n                  />\n                ) : (\n                  <Table.HeaderCell\n                    className=\"TodoList-HeaderCell TodoList-HeaderCell_delete\"\n                    content={headersConfig[header]}\n                  />\n                )}\n            </Fragment>\n          ))}\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {visibleTodos.map(todo => <TodoItem key={todo.id} todo={todo} />)}\n      </Table.Body>\n      <Table.Footer>\n        <Table.Row className=\"TodoList-TableRow\">\n          <Paginator />\n        </Table.Row>\n      </Table.Footer>\n    </Table>\n  );\n};\n\nexport default TodoList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Icon, Input } from 'semantic-ui-react';\nimport { setQuery } from '../store/query';\nimport * as selectors from '../store';\n\nconst optionQuery = {\n  maxLength: 50,\n  pattern: /[^a-z ]/ig,\n};\n\nconst SearchTodo = () => {\n  const dispatch = useDispatch();\n  const query = useSelector(selectors.getQuery);\n\n  return (\n    <Input\n      icon={<Icon name=\"search\" inverted circular color=\"orange\" />}\n      className=\"SearchTodo\"\n      placeholder=\"Search...\"\n      size=\"large\"\n      value={query}\n      onChange={({ target }) => {\n        const { pattern, maxLength } = optionQuery;\n        const queryVal = target.value\n          .replace(pattern, '')\n          .replace(/\\s{2,}/g, ' ')\n          .slice(0, maxLength);\n\n        dispatch(setQuery(queryVal));\n      }}\n    />\n  );\n};\n\nexport default SearchTodo;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Header, Segment } from 'semantic-ui-react';\nimport './App.scss';\n\nimport * as api from './helpers/api';\nimport * as selectors from './store';\nimport * as loadingActions from './store/loading';\nimport { initTodos } from './store/todos';\nimport TodoList from './components/TodoList';\nimport SearchTodo from './components/SearchTodo';\n\nconst getAppData = async (): Promise<Todo[]> => {\n  const todosFromServer = await api.getTodos();\n  const users = await api.getUsers();\n\n  await new Promise(ok => setTimeout(ok, 1000));\n\n  return todosFromServer.map((todo: Todo) => ({\n    ...todo,\n    user: users.find((user: User) => user.id === todo.userId) || undefined,\n  }));\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector(selectors.getLoading);\n  const loaded = useSelector(selectors.getLoaded);\n  const error = useSelector(selectors.getError);\n\n  const loadData = () => {\n    dispatch(loadingActions.startLoading());\n\n    getAppData()\n      .then(todosFromServer => {\n        dispatch(initTodos(todosFromServer));\n        dispatch(loadingActions.setLoaded());\n      })\n      .catch(err => {\n        dispatch(loadingActions.setError(\n          `Something went wrong: ${err.message}`,\n        ));\n      })\n      .finally(() => {\n        dispatch(loadingActions.finishLoading());\n      });\n  };\n\n  return (\n    <Segment inverted className=\"App Application\">\n      <Header as=\"h1\" color=\"orange\" content=\"Redux list of todos\" />\n      {loaded ? (\n        <>\n          <SearchTodo />\n          <TodoList />\n        </>\n      ) : (\n        <Button\n          className=\"App-LoadButton\"\n          content=\"Load Todo\"\n          loading={loading}\n          disabled={loading}\n          color=\"orange\"\n          size=\"big\"\n          onClick={loadData}\n        />\n      )}\n      <Header as=\"h2\" color=\"yellow\">{error}</Header>\n    </Segment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}